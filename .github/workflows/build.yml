name: Build

on:
  release:
    types: [published]

  workflow_dispatch:

jobs:
  build-webui:
    name: Build WebUI
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: '12'

      - name: Install dependencies
        run: npm install

      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: node_modules

      - name: Pre-build
        run: npm run-script prebuild:webui

      - name: Build
        run: npm run build

      - name: Post-build
        run: npm run-script postbuild:webui

      - name: Create zip
        run: |
          mv ./dist/ ./web/
          zip -r release.zip ./web/

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./release.zip
          asset_name: Transmissionic-webui-${{ github.event.release.tag_name }}.zip
          asset_content_type: application/zip

  build-electron-linux:
    name: Build Electron Linux
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: '12'

      - name: Get node_modules cache
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: node_modules

      - name: Install dependencies
        run: |
          npm install
          npm install -g @ionic/cli
          npm install -g @capacitor/cli

      - name: Build
        run: ionic capacitor sync @capacitor-community/electron
      
      - name: Post-build
        run: npm run-script postbuild:electron

      - name: Install electron dependencies
        working-directory: ./electron
        run: npm install

      - name: Build electron
        working-directory: ./electron
        run: npm run-script electron:build-linux

      - name: Upload amd64 Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./electron/dist/Transmissionic-linux-amd64-${{ github.event.release.tag_name }}.deb
          asset_name: Transmissionic-linux-amd64-${{ github.event.release.tag_name }}.deb
          asset_content_type: application/octet-stream

      - name: Upload i386 Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./electron/dist/Transmissionic-linux-i386-${{ github.event.release.tag_name }}.deb
          asset_name: Transmissionic-linux-i386-${{ github.event.release.tag_name }}.deb
          asset_content_type: application/octet-stream

  build-electron-win:
    name: Build Electron Windows
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: '12'

      - name: Get node_modules cache
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: node_modules

      - name: Install dependencies
        run: |
          npm install
          npm install -g @ionic/cli
          npm install -g @capacitor/cli

      - name: Build
        run: ionic capacitor sync @capacitor-community/electron
      
      - name: Post-build
        run: npm run-script postbuild:electron

      - name: Install electron dependencies
        working-directory: ./electron
        run: npm install

      - name: Build electron
        working-directory: ./electron
        run: npm run-script electron:build-windows

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./electron/dist/Transmissionic-win-${{ github.event.release.tag_name }}.exe
          asset_name: Transmissionic-win-${{ github.event.release.tag_name }}.exe
          asset_content_type: application/octet-stream

  build-android:
    name: Build Android
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: '12'

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Get node_modules cache
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: node_modules

      - name: Install dependencies
        run: |
          npm install
          npm install -g @ionic/cli
          npm install -g @capacitor/cli

      - name: Build
        run: ionic capacitor sync android

      - name: Build APK
        working-directory: ./android
        run: |
          chmod +x gradlew
          ./gradlew build

      - uses: r0adkll/sign-android-release@v1
        name: Sign APK
        id: sign_app
        with:
          releaseDirectory: ./android/app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: "30.0.2"
          
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{steps.sign_app.outputs.signedReleaseFile}}
          asset_name: Transmissionic-android-${{ github.event.release.tag_name }}.apk
          asset_content_type: application/zip

      - name: Publish release
        uses: StuYarrow/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          id: ${{ github.event.release.id }}