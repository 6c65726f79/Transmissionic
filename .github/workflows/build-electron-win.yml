# This is a basic workflow to help you get started with Actions

name: Build Electron Windows

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    tags:
    - '*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '12'
          
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}

      - name: Install dependencies
        run: |
          npm install
          npm install -g @ionic/cli
          npm install -g @capacitor/cli

      - name: Build
        run: ionic capacitor sync @capacitor-community/electron
      - name: Post-build
        run: npm run-script postbuild:electron

      - name: Get latest release
        uses: octokit/request-action@v2.x
        id: get_latest_release
        with:
            route: GET /repos/:repository/releases/latest
            repository: ${{ github.repository }}
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get upload url
        id: get_upload_url
        run: |
          url=$(echo "$response" | jq -r '.upload_url')
          echo "::set-output name=url::$url"
        env: 
            response:  ${{ steps.get_latest_release.outputs.data }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url:  ${{steps.get_upload_url.outputs.url}}
          asset_path: ./electron/dist/Transmissionic-win-${{ steps.get_version.outputs.VERSION }}.exe
          asset_name: Transmissionic-win-${{ steps.get_version.outputs.VERSION }}.exe
          asset_content_type: application/octet-stream
